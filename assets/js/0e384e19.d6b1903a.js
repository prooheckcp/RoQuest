"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3976],{2053:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"intro","title":"\ud83e\udd14 About","description":"RoQuest is a sophisticated abstract implementation of a Quest System. Although it can self manage nearly everything by itself it also allows for the developer to manually set and manage everything making it capable of adapting to your needs!","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/RoQuest/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/prooheckcp/RoQuest/edit/master/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"\ud83d\udc4b\ud83c\udffc Intro"},"sidebar":"defaultSidebar","next":{"title":"\ud83d\udca1 How It Works","permalink":"/RoQuest/docs/GettingStarted/HowItWorks"}}');var s=o(74848),a=o(28453);const i={sidebar_position:1,sidebar_label:"\ud83d\udc4b\ud83c\udffc Intro"},r="\ud83e\udd14 About",l={},d=[{value:"\ud83d\udd0d Why RoQuest",id:"-why-roquest",level:2},{value:"\ud83d\udd25 Main Features",id:"-main-features",level:2}];function c(e){const t={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"-about",children:"\ud83e\udd14 About"})}),"\n",(0,s.jsx)(t.p,{children:"RoQuest is a sophisticated abstract implementation of a Quest System. Although it can self manage nearly everything by itself it also allows for the developer to manually set and manage everything making it capable of adapting to your needs!"}),"\n",(0,s.jsx)(t.h2,{id:"-why-roquest",children:"\ud83d\udd0d Why RoQuest"}),"\n",(0,s.jsx)(t.p,{children:"One of the most common yet most challenging systems that games require are quest systems. These systems should be capable of containing, tracking and reacting to progress of the player during his playtime."}),"\n",(0,s.jsx)(t.p,{children:"Since this is such a heavy system and that should be avoided to be hardcoded I decided to make an abstract one that would allow me to easily add quest systems to all my projects. I then decided to open-source it to contribute to the community and possibly have the help of other developers in order to improve this system even further!"}),"\n",(0,s.jsx)(t.h2,{id:"-main-features",children:"\ud83d\udd25 Main Features"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Support for Repeatable Quests"}),"\n",(0,s.jsx)(t.li,{children:"Highly customizable behavior"}),"\n",(0,s.jsx)(t.li,{children:"Support for LifeCycles attached to quests"}),"\n",(0,s.jsx)(t.li,{children:"Server to Client replication to meet your UI needs"}),"\n",(0,s.jsx)(t.li,{children:"Easy way of getting and loading player data (to connect to a DataStore)"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>r});var n=o(96540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);