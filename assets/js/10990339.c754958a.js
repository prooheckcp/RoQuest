"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1979],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),c=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),y=n,f=u["".concat(i,".").concat(y)]||u[y]||d[y]||o;return a?r.createElement(f,l(l({ref:t},p),{},{components:a})):r.createElement(f,l({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=y;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<o;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}y.displayName="MDXCreateElement"},4003:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const o={sidebar_position:10,sidebar_label:"\ud83d\udcbe How to save to DataStore"},l="\ud83d\udcbe How to save to DataStore",s={unversionedId:"DataStore",id:"DataStore",title:"\ud83d\udcbe How to save to DataStore",description:"Most developers will want to connect their Quest System to a data store in order to save/load their data.",source:"@site/docs/DataStore.md",sourceDirName:".",slug:"/DataStore",permalink:"/RoQuest/docs/DataStore",draft:!1,editUrl:"https://github.com/prooheckcp/RoQuest/edit/master/docs/DataStore.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"\ud83d\udcbe How to save to DataStore"},sidebar:"defaultSidebar",previous:{title:"\ud83d\udc40 Example",permalink:"/RoQuest/docs/LifeCycles/Example"},next:{title:"\ud83d\udeab Disable Quests",permalink:"/RoQuest/docs/Tips/DisableQuests"}},i={},c=[{value:"\ud83d\udd0d Native DataStore",id:"-native-datastore",level:2},{value:"\ud83d\udd0d ProfileService",id:"-profileservice",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-how-to-save-to-datastore"},"\ud83d\udcbe How to save to DataStore"),(0,n.kt)("p",null,"Most developers will want to connect their Quest System to a data store in order to save/load their data."),(0,n.kt)("p",null,"Here you can find some examples on how to do it"),(0,n.kt)("h2",{id:"-native-datastore"},"\ud83d\udd0d Native DataStore"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'-- main.lua\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal DataStoreService = game:GetService("DataStoreService")\nlocal Players = game:GetService("Players")\n\nlocal RoQuest = require(ReplicatedStorage.RoQuest).Server\n\nlocal questsStore = DataStoreService:GetDataStore("PlayerQuests")\n\nRoQuest:Init(RoQuest:LoadDirectory(ReplicatedStorage.Quests))\n\nlocal function playerAdded(player: Player)\n    local success, playerData = pcall(function()\n        return questsStore:GetAsync("player_"..player.UserId)\n    end)\n    \n\n    if playerData then -- Set the data on RoQuest\n        RoQuest:SetPlayerData(player, playerData)\n    end\nend\n\nlocal function playerRemoved(player: Player)\n    local success, errorMessage = pcall(function()\n        questsStore:SetAsync("player_"..player.UserId, RoQuest:GetPlayerData(player))\n    end)\n    \n    if not success then\n        print(errorMessage)\n    end\nend\n\nRoQuest.OnStart():andThen(function()\n    Players.PlayerAdded:Connect(playerAdded)\n    \n    for _, player: Player in Players:GetPlayers() do\n        playerAdded(player)\n    end\n    \n    Players.PlayerRemoving:Connect(playerRemoved)\n    \n    RoQuest.OnQuestObjectiveChanged:Connect(function(player: Player, questId: string, objectiveId: string, newValue: number)\n        print(player.Name, " got ", newValue, objectiveId)\n    end)\n    \n    RoQuest.OnQuestCompleted:Connect(function(player: Player, questId: string)\n        print(player.Name, " just completed the quest: ", questId)\n    end)\nend)\n')),(0,n.kt)("h2",{id:"-profileservice"},"\ud83d\udd0d ProfileService"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},'    local ProfileStore = ProfileService.GetProfileStore("RamdomKey", {})\n    local profile = ProfileStore:LoadProfileAsync("USER_"..userId)\n\n    if not profile.Data then\n        profile.Data = {}\n    end\n\n    if not playerData.Data.PlayerQuestData then -- New player, create new quest data\n        playerData.Data.PlayerQuestData = PlayerQuestData {}\n    end\n\n    -- Since RoQuest stores the player data as a pointer we don\'t need to update anymore. Once the profile gets released it will automatically safe the player data with it\n    RoQuest:SetPlayerData(player, playerData.Data.PlayerQuestData)\n')))}d.isMDXComponent=!0}}]);